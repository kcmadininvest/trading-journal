# Generated by Django 4.2.25 on 2025-10-23 20:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('trades', '0004_alter_positionstrategy_is_current_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom personnalisé pour identifier ce compte', max_length=100, verbose_name='Nom du compte')),
                ('account_type', models.CharField(choices=[('topstep', 'TopStep'), ('ibkr', 'Interactive Brokers'), ('ninjatrader', 'NinjaTrader'), ('tradovate', 'Tradovate'), ('other', 'Autre')], help_text='Type de broker ou plateforme', max_length=20, verbose_name='Type de compte')),
                ('broker_account_id', models.CharField(blank=True, help_text='Identifiant du compte chez le broker', max_length=100, verbose_name='ID du compte broker')),
                ('currency', models.CharField(default='USD', help_text='Devise principale du compte', max_length=3, verbose_name='Devise')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('archived', 'Archivé')], default='active', max_length=20, verbose_name='Statut')),
                ('broker_config', models.JSONField(blank=True, default=dict, help_text='Configuration spécifique au type de broker', verbose_name='Configuration broker')),
                ('description', models.TextField(blank=True, help_text='Description du compte', verbose_name='Description')),
                ('is_default', models.BooleanField(default=False, help_text='Compte sélectionné par défaut pour cet utilisateur', verbose_name='Compte par défaut')),  # type: ignore
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Compte de trading',
                'verbose_name_plural': 'Comptes de trading',
                'ordering': ['-is_default', 'name'],
            },
        ),
        migrations.AddField(
            model_name='tradingaccount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur'),
        ),
        migrations.AlterUniqueTogether(
            name='topsteptrade',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='topsteptrade',
            name='trading_account',
            field=models.ForeignKey(blank=True, help_text='Compte de trading associé à ce trade', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topstep_trades', to='trades.tradingaccount', verbose_name='Compte de trading'),
        ),
        migrations.AlterUniqueTogether(
            name='topsteptrade',
            unique_together={('user', 'trading_account', 'topstep_id')},
        ),
        migrations.AddIndex(
            model_name='topsteptrade',
            index=models.Index(fields=['trading_account', '-entered_at'], name='trades_tops_trading_0dc281_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['user', 'status'], name='trades_trad_user_id_ca7610_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['account_type'], name='trades_trad_account_c293cb_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['is_default'], name='trades_trad_is_defa_b83d4b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tradingaccount',
            unique_together={('user', 'name')},
        ),
    ]
